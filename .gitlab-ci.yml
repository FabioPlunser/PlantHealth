stages:          # List of stages for jobs, and their order of execution
  - test
  - sonarqube-check

unit-test-job:   # This jobs runs the unit tests and measures coverage
  stage: test    
  image:
    name: alpine:3.17
  script:
    - echo "Installing Python"
    - apk add --no-cache python3 py3-pip
    - cd access_point
    - echo "Creating venv"
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install wheel
    - pip install -r requirements.txt
    - echo "Running unit tests"
    - coverage run
    - coverage xml
  allow_failure: true

sonarqube-check-job:
  stage: sonarqube-check
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR/code/.sonar}"
    GIT_DEPTH: "0"
    GIT_CLEAN_FLAGS: none
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - echo "Running SonarQube scan"
    - sonar-scanner -Dsonar.python.coverage.reportPaths=access_point/coverage.xml
  allow_failure: true
